workspace:
  base: /go
  path: src/github.com/go-training/training

clone:
  git:
    image: plugins/git:1
    depth: 50
    tags: true

pipeline:
  prepare:
    image: golang:1.10
    group: build
    commands:
      - cd example19-deploy-with-kubernetes && make prepare


  build_linux_amd64:
    image: golang:1.10
    group: build
    environment:
      - GOOS=linux
      - GOARCH=amd64
      - CGO_ENABLED=0
    commands:
      - |
        if test "${DRONE_TAG}" = ""; then
          cd example19-deploy-with-kubernetes && go build -v -ldflags "-X main.version=${DRONE_COMMIT}" -a -o release/linux/amd64/hello
        else
          cd example19-deploy-with-kubernetes && go build -v -ldflags "-X main.version=${DRONE_TAG##v} -a -o release/linux/amd64/hello
        fi

  docker_golang:
    image: plugins/docker:17.12
    secrets: [ docker_username, docker_password ]
    repo: appleboy/golang-http
    dockerfile: example19-deploy-with-kubernetes/Dockerfile
    default_tags: true
    when:
      event: [ push, tag ]

  deploy:
    image: sh4d1/drone-kubernetes
    kubernetes_template: example19-deploy-with-kubernetes/deployment.yml
    secrets: [ kubernetes_server, kubernetes_cert, kubernetes_token ]
